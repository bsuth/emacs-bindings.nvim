local emacs = require('emacs-bindings')

if vim.g.loaded_emacs_bindings {
  return
}

vim.g.loaded_emacs_bindings = true
vim.g.emacs_bindings_wordchars ||= os.getenv('WORDCHARS') || '*?_-.[]~='
vim.g.emacs_bindings_modes ||= 'ic'

local VALID_MODES = {
  i = true,
  c = true,
  n = true,
  v = true,
}

for i = 1, #vim.g.emacs_bindings_modes {
  local modeChar = vim.g.emacs_bindings_modes:sub(i, i)
  if VALID_MODES[modeChar] {
    vim.keymap.set(modeChar, '<c-b>', '<Left>')
    vim.keymap.set(modeChar, '<c-f>', '<Right>')
    vim.keymap.set(modeChar, '<c-a>', '<Home>')
    vim.keymap.set(modeChar, '<c-e>', '<End>')
    vim.keymap.set(modeChar, '<m-b>', emacs.move_word_back)
    vim.keymap.set(modeChar, '<m-f>', emacs.move_word_forward)
    vim.keymap.set(modeChar, '<c-h>', emacs.delete_char_back)
    vim.keymap.set(modeChar, '<c-d>', emacs.delete_char_forward)
    vim.keymap.set(modeChar, '<m-backspace>', emacs.delete_word_back)
    vim.keymap.set(modeChar, '<m-d>', emacs.delete_word_forward)
    vim.keymap.set(modeChar, '<c-u>', emacs.delete_line_back)
    vim.keymap.set(modeChar, '<c-k>', emacs.delete_line_forward)
  }
}
